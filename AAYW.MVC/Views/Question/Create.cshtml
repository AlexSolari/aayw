@using AAYW.Models.ViewModels;
@model CreateQuestionModel
@{
    ViewBag.Title = "Create";
    var Length = new { Title = 80, Description = 200 };
    Func<string, object> makeAttributes = (key) => new Dictionary<string,Object> { {"data-reactive","true"}, {"data-reactive-target",key+"CharCounter"}, {"data-reactive-method", "input"} };
}

<div class="mui-panel center">
    <h2>@Html.Text("AskOwn")</h2>
    @if (!AAYW.DependecyResolver.Resolver.GetInstance<AAYW.Core.Data.Managers.UserManager>().IsAuthorized)
    {
        Length = new { Title = 400, Description = 1000 };
        <div class="info">
            <h3>@Html.Text("RegisterAlert")</h3>
            <p>@Html.Text("RegisterExplanation")</p>
        </div>
    }
    
    @using (Html.BeginForm())
    {
        <div class="row">
            @Html.ValidationSummary()
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Title)
            <div class="control mui-textfield">
                @Html.EditorFor(m => m.Title, new { htmlAttributes = makeAttributes("QuestionTitle") })
            </div>
            <div id="char-counter">
                <span id="QuestionTitleCharCounter">0</span>/@Length.Title
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Description)
            <div class="control mui-textfield">
                @Html.EditorFor(m => m.Description, new { htmlAttributes = makeAttributes("QuestionDescription") })
            </div>
            <div id="char-counter">
                <span id="QuestionDescriptionCharCounter">0</span>/@Length.Description
            </div>
        </div>
        <div class="row">
            <div class="control">
                <input class="mui-btn mui-btn--raised" type="submit" value="@Html.Text("Create")" />
            </div>
        </div>
    }
</div>  